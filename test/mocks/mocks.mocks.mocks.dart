// Mocks generated by Mockito 5.4.6 from annotations
// in book_library/test/mocks/mocks.mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:book_library/src/core/failures/failures.dart' as _i7;
import 'package:book_library/src/core/storage/wrapper/shared_preferences_wrapper.dart'
    as _i3;
import 'package:book_library/src/features/onboard/data/datasources/local_data_source.dart'
    as _i5;
import 'package:book_library/src/features/onboard/domain/repository/onboard_repository.dart'
    as _i6;
import 'package:book_library/src/features/onboard/domain/use_cases/get_onboarding_done_use_case.dart'
    as _i11;
import 'package:book_library/src/features/onboard/domain/use_cases/set_onboarding_done_use_case.dart'
    as _i10;
import 'package:book_library/src/features/onboard/presentation/models/onboard_slide_ui.dart'
    as _i9;
import 'package:book_library/src/features/onboard/presentation/services/onboard_content_provider.dart'
    as _i8;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [KeyValueWrapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockKeyValueWrapper extends _i1.Mock implements _i3.KeyValueWrapper {
  MockKeyValueWrapper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> setString(String? key, String? value) =>
      (super.noSuchMethod(
            Invocation.method(#setString, [key, value]),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  String? getString(String? key) =>
      (super.noSuchMethod(Invocation.method(#getString, [key])) as String?);

  @override
  _i4.Future<bool> remove(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#remove, [key]),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);
}

/// A class which mocks [OnboardingLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockOnboardingLocalDataSource extends _i1.Mock
    implements _i5.OnboardingLocalDataSource {
  MockOnboardingLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> isDone() =>
      (super.noSuchMethod(
            Invocation.method(#isDone, []),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<void> setDone(bool? value) =>
      (super.noSuchMethod(
            Invocation.method(#setDone, [value]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}

/// A class which mocks [OnboardingRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockOnboardingRepository extends _i1.Mock
    implements _i6.OnboardingRepository {
  MockOnboardingRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i7.Failure, bool>> isDone() =>
      (super.noSuchMethod(
            Invocation.method(#isDone, []),
            returnValue: _i4.Future<_i2.Either<_i7.Failure, bool>>.value(
              _FakeEither_0<_i7.Failure, bool>(
                this,
                Invocation.method(#isDone, []),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i7.Failure, bool>>);

  @override
  _i4.Future<_i2.Either<_i7.Failure, _i2.Unit>> setDone(bool? value) =>
      (super.noSuchMethod(
            Invocation.method(#setDone, [value]),
            returnValue: _i4.Future<_i2.Either<_i7.Failure, _i2.Unit>>.value(
              _FakeEither_0<_i7.Failure, _i2.Unit>(
                this,
                Invocation.method(#setDone, [value]),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i7.Failure, _i2.Unit>>);
}

/// A class which mocks [OnboardContentProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockOnboardContentProvider extends _i1.Mock
    implements _i8.OnboardContentProvider {
  MockOnboardContentProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i9.OnboardSlideUi> slides() =>
      (super.noSuchMethod(
            Invocation.method(#slides, []),
            returnValue: <_i9.OnboardSlideUi>[],
          )
          as List<_i9.OnboardSlideUi>);
}

/// A class which mocks [SetOnboardingDoneUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSetOnboardingDoneUseCase extends _i1.Mock
    implements _i10.SetOnboardingDoneUseCase {
  MockSetOnboardingDoneUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i7.Failure, _i2.Unit>> call(bool? value) =>
      (super.noSuchMethod(
            Invocation.method(#call, [value]),
            returnValue: _i4.Future<_i2.Either<_i7.Failure, _i2.Unit>>.value(
              _FakeEither_0<_i7.Failure, _i2.Unit>(
                this,
                Invocation.method(#call, [value]),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i7.Failure, _i2.Unit>>);
}

/// A class which mocks [GetOnboardingDoneUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetOnboardingDoneUseCase extends _i1.Mock
    implements _i11.GetOnboardingDoneUseCase {
  MockGetOnboardingDoneUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i7.Failure, bool>> call() =>
      (super.noSuchMethod(
            Invocation.method(#call, []),
            returnValue: _i4.Future<_i2.Either<_i7.Failure, bool>>.value(
              _FakeEither_0<_i7.Failure, bool>(
                this,
                Invocation.method(#call, []),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i7.Failure, bool>>);
}
